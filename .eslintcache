[{"D:\\Tasks\\elofok\\src\\index.js":"1","D:\\Tasks\\elofok\\src\\App.js":"2","D:\\Tasks\\elofok\\src\\components\\Header.js":"3","D:\\Tasks\\elofok\\src\\components\\Tabs.js":"4","D:\\Tasks\\elofok\\src\\reducers\\userReducer.js":"5","D:\\Tasks\\elofok\\src\\actions\\userActions.js":"6","D:\\Tasks\\elofok\\src\\components\\Drawer.js":"7","D:\\Tasks\\elofok\\src\\hooks\\fakeStudentsService.js":"8","D:\\Tasks\\elofok\\src\\hooks\\FakeStudentsService.js":"9","D:\\Tasks\\elofok\\src\\components\\Datatable\\Datatable.js":"10","D:\\Tasks\\elofok\\src\\components\\Datatable\\Styles.js":"11","D:\\Tasks\\elofok\\src\\i18next.js":"12"},{"size":453,"mtime":1608912743313,"results":"13","hashOfConfig":"14"},{"size":806,"mtime":1608908708570,"results":"15","hashOfConfig":"14"},{"size":2167,"mtime":1608915517673,"results":"16","hashOfConfig":"14"},{"size":920,"mtime":1608915258763,"results":"17","hashOfConfig":"14"},{"size":1561,"mtime":1608903677008,"results":"18","hashOfConfig":"14"},{"size":112,"mtime":1608903869174,"results":"19","hashOfConfig":"14"},{"size":3775,"mtime":1608917225584,"results":"20","hashOfConfig":"14"},{"size":364,"mtime":1608908459637,"results":"21","hashOfConfig":"14"},{"size":364,"mtime":1608908459637,"results":"22","hashOfConfig":"14"},{"size":6326,"mtime":1608915336517,"results":"23","hashOfConfig":"14"},{"size":306,"mtime":1608909751761,"results":"24","hashOfConfig":"14"},{"size":472,"mtime":1608912528275,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"w5qvk6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Tasks\\elofok\\src\\index.js",[],["55","56"],"D:\\Tasks\\elofok\\src\\App.js",["57"],"import React from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Header from \"./components/Header\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DataTable from \"./components/Datatable/Datatable\";\nimport { FakeStudentsService } from \"./hooks/FakeStudentsService\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst App = () => {\n  const users = FakeStudentsService();\n  return (\n    <Box>\n      <Header />\n      <Grid container>\n        <Grid container spacing={4} item xs={12}>\n          <Grid item container justify=\"center\">\n            <DataTable users={users} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","D:\\Tasks\\elofok\\src\\components\\Header.js",["58","59","60","61"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Explicit from \"@material-ui/icons/Explicit\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Drawer from \"./Drawer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: \"50px\",\r\n  },\r\n  menuButton: {},\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(65),\r\n  },\r\n  iconContainer: {\r\n    marginRight: theme.spacing(0.5),\r\n    \"&:hover\": {\r\n      background: \"#dcdcdc\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (lang) => {\r\n    i18n.changeLanguage(lang);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Box>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              className={classes.iconContainer}\r\n              onClick={() => handleClick(\"en\")}\r\n            >\r\n              <Explicit />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.iconContainer}\r\n              aria-label=\"menu\"\r\n              color=\"primary\"\r\n              onClick={() => handleClick(\"ar\")}\r\n            >\r\n              <Explicit />\r\n            </IconButton>\r\n            <Typography>contactus@mcst.edu.sa</Typography>\r\n          </Box>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n           المعرفة\r\n          </Typography>\r\n          <div>\r\n            <Drawer />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Tasks\\elofok\\src\\components\\Tabs.js",["62","63"],"import React, { useState } from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFilter } from \"../actions/userActions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst FilterHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState(0);\r\n  const { tabsList, filters } = useSelector((state) => state);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    updateFilter(dispatch, tabsList[newValue]);\r\n  };\r\n  return (\r\n    <Tabs\r\n      value={value}\r\n      onChange={handleChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      {tabsList.map((tab) => (\r\n        <Tab label={t(tab)} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default FilterHeader;\r\n","D:\\Tasks\\elofok\\src\\reducers\\userReducer.js",[],"D:\\Tasks\\elofok\\src\\actions\\userActions.js",[],"D:\\Tasks\\elofok\\src\\components\\Drawer.js",["64","65"],"D:\\Tasks\\elofok\\src\\hooks\\fakeStudentsService.js",["66"],"D:\\Tasks\\elofok\\src\\hooks\\FakeStudentsService.js",[],"D:\\Tasks\\elofok\\src\\components\\Datatable\\Datatable.js",["67","68"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport MuiTableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport { TableRow, TablePagination, TableFooter } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FilterHeader from \"../../components/Tabs\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { Styles } from \"./Styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TableCell = withStyles({\r\n  root: {\r\n    borderBottom: \"none\",\r\n  },\r\n})(MuiTableCell);\r\n\r\nconst TablePaginationActions = (props) => {\r\n  const classes = Styles();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.roott}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Datatable = ({ users }) => {\r\n  const classes = Styles();\r\n  const keys = Object.keys(users[0]);\r\n  const rows = users;\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n      <FilterHeader />\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow className={classes.tableCell}>\r\n            {keys.map((key, index) => {\r\n              if (index === 0) {\r\n                return <TableCell key={index}>{t(key)}</TableCell>;\r\n              }\r\n              return (\r\n                <TableCell key={index} align=\"center\">\r\n                  {t(key)}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((user, userIndex) => (\r\n            <TableRow key={userIndex}>\r\n              {keys.map((key, index) => {\r\n                if (index === 0) {\r\n                  return (\r\n                    <TableCell key={index} component=\"th\" scope=\"row\">\r\n                      <Box display=\"flex\">\r\n                        <PersonIcon color=\"primary\" />\r\n                        <Typography style={{ paddingLeft: \"10px\" }}>\r\n                          {user[key]}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableCell key={index} align=\"center\">\r\n                    {t(user[key])}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Datatable;\r\n","D:\\Tasks\\elofok\\src\\components\\Datatable\\Styles.js",[],"D:\\Tasks\\elofok\\src\\i18next.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":7,"nodeType":"75","messageId":"76","endLine":8,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":21},{"ruleId":"73","severity":1,"message":"78","line":33,"column":11,"nodeType":"75","messageId":"76","endLine":33,"endColumn":12},{"ruleId":"73","severity":1,"message":"79","line":34,"column":20,"nodeType":"75","messageId":"76","endLine":34,"endColumn":31},{"ruleId":"73","severity":1,"message":"80","line":35,"column":9,"nodeType":"75","messageId":"76","endLine":35,"endColumn":13},{"ruleId":"73","severity":1,"message":"81","line":11,"column":21,"nodeType":"75","messageId":"76","endLine":11,"endColumn":28},{"ruleId":"73","severity":1,"message":"82","line":12,"column":14,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"83","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"82","line":57,"column":14,"nodeType":"75","messageId":"76","endLine":57,"endColumn":18},{"ruleId":"73","severity":1,"message":"84","line":9,"column":18,"nodeType":"75","messageId":"76","endLine":9,"endColumn":28},{"ruleId":"73","severity":1,"message":"85","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":20},{"ruleId":"73","severity":1,"message":"82","line":105,"column":14,"nodeType":"75","messageId":"76","endLine":105,"endColumn":18},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","'AccountCircle' is defined but never used.","'t' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'filters' is assigned a value but never used.","'i18n' is assigned a value but never used.","'Button' is defined but never used.","'finalUsers' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]